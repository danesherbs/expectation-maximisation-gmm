%% Inputs:%     - phi probability of each cluster e.g. [0.25, 0.25, 0.5]%     - num_samples to draw from GMM%% Outputs:%     - xs x-coordinates of samples%     - ys y-coordinates of samples%     - ks clusters of coordinates%function [xs, ys, ks] = sample_gmm(phi, num_samples)  % Deduce other hyper-parameters  k = length(phi);  % number of clusters  d = 2;  % number of dimensions  % Randomly genenerate mean and covariance matrices  mu = 10 * rand(k, d);  sigma = [1, 0; 0, 1];  % same for all  % Generate samples  xs = [];  % x coordinates (sampled)  ys = [];  % y coordinates (sampled)  ks = [];  % clusters (sampled)  for i = 1:num_samples    % Sample cluster z_i = j and set mu_j, sigma_j    j = find(mnrnd(1, phi));  % p(z_i = j) = phi_j i.e. pick z_i from {1, ..., k} i.e. z_i ~ Multinomial(phi)    mu_j = mu(j, :);    sigma_j = sigma;    sample = mvnrnd(mu_j, sigma_j);  % draw one sample from N(mu_j, sigma_j)    % Update sampled coordinates and corresponding cluster    xs = [xs sample(1)];    ys = [ys sample(2)];    ks = [ks j];
  endforendfunction